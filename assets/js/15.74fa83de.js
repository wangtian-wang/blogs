(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{287:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"closure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#closure"}},[t._v("#")]),t._v(" closure")]),t._v(" "),a("h4",{attrs:{id:"闭包的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的定义"}},[t._v("#")]),t._v(" 闭包的定义")]),t._v(" "),a("blockquote",[a("p",[t._v("函数能记住自己被定义时的作用域,并且访问该作用域的变量,那这个函数就叫做闭包函数")])]),t._v(" "),a("h4",{attrs:{id:"闭包的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的优点"}},[t._v("#")]),t._v(" 闭包的优点")]),t._v(" "),a("blockquote",[a("p",[t._v("形成块级作用域，减少全局变量污染")])]),t._v(" "),a("blockquote",[a("p",[t._v("封装私有变量")])]),t._v(" "),a("h4",{attrs:{id:"闭包的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的缺点"}},[t._v("#")]),t._v(" 闭包的缺点")]),t._v(" "),a("blockquote",[a("p",[t._v("过度使用闭包 会引起内存泄漏")])]),t._v(" "),a("h4",{attrs:{id:"闭包的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的应用"}},[t._v("#")]),t._v(" 闭包的应用")]),t._v(" "),a("blockquote",[a("p",[t._v("节流 防抖 柯力化函数 结果缓存 模块化 事件 定时器")])]),t._v(" "),a("h4",{attrs:{id:"闭包函数的-this-指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包函数的-this-指向"}},[t._v("#")]),t._v(" 闭包函数的 this 指向")]),t._v(" "),a("blockquote",[a("p",[t._v("因为闭包函数被返回到了全局 所以闭包中的 this 指向 window")])]),t._v(" "),a("p",[t._v("闭包与词法作用域的区别")]),t._v(" "),a("p",[t._v("嵌套函数 变量查找规则适用于词法作用域")]),t._v(" "),a("p",[t._v("词法作用域: 根据源代码中声明变量的位置来确定变量在何处可以使用")]),t._v(" "),a("p",[t._v("闭包特点: 每个闭包都有一个词法作用域")])])}),[],!1,null,null,null);a.default=e.exports}}]);